// © 2017-2019 cake>pie
// All rights reserved

using System;
using System.IO;
using System.Reflection;
using UnityEngine;

namespace AirlockPlus
{
	[KSPAddon(KSPAddon.Startup.Instantly, true)]
	public class SettingsMigration : MonoBehaviour
	{
		private static readonly string currentVer = Assembly.GetExecutingAssembly().GetName().Version.ToString();
		private static readonly string filepath = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "Settings.cfg").Replace("\\", "/");

		private const string migrated = "Migrated from earlier settings file.";
		private const string debugSetting = " This is a debug setting; it should NOT be here unless you were specifically instructed to add it.";
		private const string defaultValue = " Default: {0}";

		private void Awake() {
			if (!File.Exists(filepath))
				MakeNew();
			else {
				ConfigNode fromFile = ConfigNode.Load(filepath)?.GetNode("AirlockPlusSettings");
				if (fromFile == null) {
					Log($"Existing settings file is malformed!");
					MakeNew();
				}
				string fileVer = "unknown version";
				fromFile.TryGetValue("version", ref fileVer);
				if (fileVer != currentVer) {
					Log($"Migrating settings from {fileVer} to {currentVer}.");
					Migrate(fromFile);
				}
			}
			Destroy(this.gameObject);
		}

		private void MakeNew() {
			Log($"Creating new settings file for {currentVer}.");
			Migrate();
		}

		private void Migrate(ConfigNode oldNode = null) {
			oldNode = oldNode ?? new ConfigNode();
			ConfigNode newNode = new ConfigNode("AirlockPlusSettings", $"Generated by AirlockPlus {currentVer} at {System.DateTime.UtcNow} UTC.");
			newNode.AddValue("version", currentVer, "Used to automatically migrate existing settings to newer versions. Do not tamper with this value.");

			int framewait = -1;
			if (oldNode.TryGetValue("framewait", ref framewait))
				newNode.AddValue("framewait", framewait, migrated + debugSetting);

			bool boardingScreenMessages = true;
			if (oldNode.TryGetValue("boardingScreenMessages", ref boardingScreenMessages) && !boardingScreenMessages)
				newNode.AddValue("boardingScreenMessages", boardingScreenMessages, migrated + String.Format(defaultValue, true));
			else
				newNode.AddValue("boardingScreenMessages", boardingScreenMessages);

			bool useCLS = true;
			if (oldNode.TryGetValue("useCLS", ref useCLS) && !useCLS)
				newNode.AddValue("useCLS", useCLS, migrated + String.Format(defaultValue, true));
			else
				newNode.AddValue("useCLS", useCLS);

			ConfigNode wrap = new ConfigNode();
			wrap.AddNode(newNode);
			wrap.Save(filepath, "For documentation on these settings, refer to https://github.com/cake-pie/AirlockPlus/wiki");
		}

		private void Log(string s) {
			Debug.Log("[AirlockPlus|SettingsMigration] " + s);
		}
	}
}
